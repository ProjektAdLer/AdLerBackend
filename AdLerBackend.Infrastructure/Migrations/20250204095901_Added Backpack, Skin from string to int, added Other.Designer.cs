// <auto-generated />
using System;
using AdLerBackend.Infrastructure.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdLerBackend.Infrastructure.Migrations
{
    [DbContext(typeof(ProductionContext))]
    [Migration("20250204095901_Added Backpack, Skin from string to int, added Other")]
    partial class AddedBackpackSkinfromstringtointaddedOther
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AdLerBackend.Domain.Entities.AvatarEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Backpack")
                        .HasColumnType("longtext");

                    b.Property<string>("Beard")
                        .HasColumnType("longtext");

                    b.Property<string>("Eyebrows")
                        .HasColumnType("longtext");

                    b.Property<string>("Eyes")
                        .HasColumnType("longtext");

                    b.Property<string>("Glasses")
                        .HasColumnType("longtext");

                    b.Property<string>("Hair")
                        .HasColumnType("longtext");

                    b.Property<int?>("HairColor")
                        .HasColumnType("int");

                    b.Property<string>("Headgear")
                        .HasColumnType("longtext");

                    b.Property<string>("Mouth")
                        .HasColumnType("longtext");

                    b.Property<string>("Nose")
                        .HasColumnType("longtext");

                    b.Property<string>("Other")
                        .HasColumnType("longtext");

                    b.Property<string>("Pants")
                        .HasColumnType("longtext");

                    b.Property<int?>("PantsColor")
                        .HasColumnType("int");

                    b.Property<int>("PlayerDataId")
                        .HasColumnType("int");

                    b.Property<float>("Roundness")
                        .HasColumnType("float");

                    b.Property<string>("Shirt")
                        .HasColumnType("longtext");

                    b.Property<int?>("ShirtColor")
                        .HasColumnType("int");

                    b.Property<string>("Shoes")
                        .HasColumnType("longtext");

                    b.Property<int?>("ShoesColor")
                        .HasColumnType("int");

                    b.Property<int?>("SkinColor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Avatars");
                });

            modelBuilder.Entity("AdLerBackend.Domain.Entities.H5PLocationEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1L)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("ElementId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("WorldEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorldEntityId");

                    b.ToTable("H5PLocationEntity");
                });

            modelBuilder.Entity("AdLerBackend.Domain.Entities.PlayerEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("AvatarEntityId")
                        .HasColumnType("int");

                    b.Property<int?>("AvatarId")
                        .HasColumnType("int");

                    b.Property<int>("LmsId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AvatarEntityId");

                    b.HasIndex("AvatarId")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("AdLerBackend.Domain.Entities.WorldEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("AtfJson")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("LmsWorldId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Worlds");
                });

            modelBuilder.Entity("AdLerBackend.Domain.Entities.H5PLocationEntity", b =>
                {
                    b.HasOne("AdLerBackend.Domain.Entities.WorldEntity", null)
                        .WithMany("H5PFilesInCourse")
                        .HasForeignKey("WorldEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdLerBackend.Domain.Entities.PlayerEntity", b =>
                {
                    b.HasOne("AdLerBackend.Domain.Entities.AvatarEntity", "AvatarEntity")
                        .WithMany()
                        .HasForeignKey("AvatarEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdLerBackend.Domain.Entities.AvatarEntity", "Avatar")
                        .WithOne("PlayerEntity")
                        .HasForeignKey("AdLerBackend.Domain.Entities.PlayerEntity", "AvatarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Avatar");

                    b.Navigation("AvatarEntity");
                });

            modelBuilder.Entity("AdLerBackend.Domain.Entities.AvatarEntity", b =>
                {
                    b.Navigation("PlayerEntity")
                        .IsRequired();
                });

            modelBuilder.Entity("AdLerBackend.Domain.Entities.WorldEntity", b =>
                {
                    b.Navigation("H5PFilesInCourse");
                });
#pragma warning restore 612, 618
        }
    }
}
